# Render configuration for Serafina Discord Bot
# Documentation: https://render.com/docs/blueprint-spec

# Global environment variables for all services
envVars:
  - key: NODE_ENV
    value: production
  - key: LOG_LEVEL
    value: info
  - key: DATABASE_URL
    value: file:./data/serafina.db
  - key: DB_DRIVER
    value: wasm  # Using WASM driver for better compatibility

# Main Discord bot service
services:
  - type: web
    name: serafina-bot
    env: node
    region: oregon  # Choose the region closest to your users
    plan: free  # Start with free tier, upgrade as needed
    autoDeploy: true  # Auto-deploy on push to main branch
    buildCommand: |
      npm ci && \
      npm run build
    startCommand: node dist/index.js
    envVars:
      - key: PORT
        value: 10000
      - key: HOST
        value: 0.0.0.0
      - key: DISCORD_TOKEN
        sync: false  # Will be set in Render dashboard
      - key: DISCORD_CLIENT_ID
        sync: false  # Will be set in Render dashboard
    healthCheckPath: /healthz
    
    # Persistent storage for SQLite database
    disk:
      name: serafina-data
      mountPath: /opt/render/project/data
      sizeGB: 1  # Adjust based on your needs

# Database service (if using PostgreSQL instead of SQLite)
# Uncomment and configure if needed:
#
# databases:
#   - name: serafina-db
#     databaseName: serafina
#     user: serafina
#     plan: free
#     ipAllowList:
#       - ip: 0.0.0.0/0
#         comment: Allow all IPs (restrict in production)

# Cron jobs (example for periodic tasks)
crons:
  - name: cleanup-temp-files
    schedule: "0 0 * * *"  # Daily at midnight
    command: node dist/scripts/cleanup.js
    envVars:
      - key: NODE_ENV
        value: production
    envVars:
      - key: PORT
        value: 10002
      - key: NODE_ENV
        value: production
    plan: free
    autoDeploy: true
