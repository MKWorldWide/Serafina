version: '3.8'

services:
  # GameDin Discord Bot Service
  gamedin-bot:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: gamedin-discord-bot
    restart: unless-stopped
    ports:
      - "3000:3000"  # Health check endpoint
    environment:
      - NODE_ENV=production
      - AWS_REGION=us-east-1
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./dist:/app/dist
    networks:
      - gamedin-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.gamedin.service=discord-bot"
      - "com.gamedin.version=1.0.0"

  # Redis Cache (Optional - for future features)
  redis:
    image: redis:7-alpine
    container_name: gamedin-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gamedin-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.gamedin.service=cache"

  # MongoDB (Optional - for future features)
  mongodb:
    image: mongo:6
    container_name: gamedin-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=gamedin2024
      - MONGO_INITDB_DATABASE=gamedin
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - gamedin-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.gamedin.service=database"

networks:
  gamedin-network:
    driver: bridge
    labels:
      - "com.gamedin.network=main"

volumes:
  redis_data:
    driver: local
    labels:
      - "com.gamedin.volume=redis"
  mongodb_data:
    driver: local
    labels:
      - "com.gamedin.volume=mongodb" 