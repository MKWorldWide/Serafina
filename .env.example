# ===================================
# Serafina Bot Configuration
# ===================================
# Copy this file to .env and update the values

# ====================
# Required Configuration
# ====================

# Discord Bot Token (Required)
# Get this from https://discord.com/developers/applications > Your App > Bot > Reset Token
DISCORD_BOT_TOKEN=your_discord_bot_token_here

# Discord Application (Client) ID
# Find this in your Discord Developer Portal > Your Application > General Information > Application ID
DISCORD_CLIENT_ID=your_client_id_here

# Discord Client Secret
# Get this from https://discord.com/developers/applications > Your App > OAuth2 > Client Secret
DISCORD_CLIENT_SECRET=your_client_secret_here

# Bot Owners (comma-separated list of Discord user IDs)
# These users will have access to owner-only commands
OWNER_IDS=123456789012345678,987654321098765432

# ====================
# OAuth Configuration
# ====================

# Base URL for OAuth callbacks (without trailing slash)
# In production, set this to your public URL (e.g., https://your-app.onrender.com)
BASE_URL=http://localhost:3000

# OAuth Redirect URI (auto-generated, do not change manually)
# This will be: ${BASE_URL}/oauth/callback
# Make sure to add this exact URL to your Discord OAuth2 redirects in the Developer Portal

# ====================
# Database Configuration
# ====================

# SQLite database URL (default: data/serafina.db)
DATABASE_URL=sqlite:data/serafina.db

# PostgreSQL/MySQL (uncomment and configure as needed)
# DATABASE_URL=postgresql://user:password@localhost:5432/serafina
# DATABASE_URL=mysql://user:password@localhost:3306/serafina

# ====================
# Web Server Configuration
# ====================

# Web server port (set to 0 to disable web server)
PORT=3000

# Web server host (set to 0.0.0.0 to accept connections from any IP)
HOST=0.0.0.0

# Web server base URL (for OAuth callbacks and webhooks)
# In production, set this to your public URL (e.g., https://your-app.onrender.com)
# This should match the BASE_URL above
BASE_URL=http://localhost:3000

# ====================
# Logging Configuration
# ====================

# Log level (error, warn, info, debug, trace)
LOG_LEVEL=info

# Log file path (set to empty string for console only)
LOG_FILE=logs/serafina.log

# Enable/disable colored output
COLOR_LOGS=true

# ====================
# Rate Limiting
# ====================

# Enable/disable rate limiting
RATE_LIMIT_ENABLED=true

# Rate limit window in milliseconds
RATE_LIMIT_WINDOW_MS=60000

# Maximum requests per window
RATE_LIMIT_MAX=100

# ====================
# Redis Configuration (Optional)
# ====================

# Redis URL (for rate limiting and caching)
# Example: redis://localhost:6379
# REDIS_URL=

# ====================
# AI Provider Configuration (Optional)
# ====================

# OpenAI
# OPENAI_API_KEY=your_openai_api_key_here
# OPENAI_MODEL=gpt-4-turbo-preview

# Mistral
# MISTRAL_API_KEY=your_mistral_api_key_here
# MISTRAL_MODEL=mixtral-8x7b

# ====================
# Advanced Configuration
# ====================

# Node environment (development, production, test)
NODE_ENV=development

# Debug mode (enables additional logging)
DEBUG=false

# HTTP request timeout in milliseconds
HTTP_TIMEOUT_MS=10000

# Maximum number of concurrent HTTP requests
MAX_CONCURRENT_REQUESTS=10

# ====================
# Feature Flags
# ====================

# Enable/disable the web dashboard
ENABLE_WEB_DASHBOARD=false

# Enable/disable command cooldowns
ENABLE_COMMAND_COOLDOWNS=true

# Default command cooldown in seconds
DEFAULT_COMMAND_COOLDOWN=3

# ====================
# Maintenance Mode
# ====================

# Enable maintenance mode (only bot owners can use commands)
MAINTENANCE_MODE=false

# Maintenance message
MAINTENANCE_MESSAGE=ðŸš§ The bot is currently under maintenance. Please try again later.
REDIS_PASSWORD=your_redis_auth_token
REDIS_TLS_ENABLED=true
REDIS_CLUSTER_MODE=true

# Security Configuration
ENCRYPTION_KEY=your_aes_256_key
JWT_SECRET=your_jwt_secret
SESSION_SECRET=your_session_secret
COOKIE_SECRET=your_cookie_secret

# CloudFront Configuration
CLOUDFRONT_DISTRIBUTION_ID=your_distribution_id
CLOUDFRONT_DOMAIN=your_cloudfront_domain

# Monitoring
CLOUDWATCH_LOG_GROUP=/aws/amplify/your-app
CLOUDWATCH_RETENTION_DAYS=30

# DO NOT ADD ACTUAL CREDENTIALS TO THIS FILE
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY= 